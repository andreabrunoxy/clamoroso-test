{"version":3,"sources":["data/data.js","assets/images/logo.png","assets/sounds/click.mp3","App.js","index.js"],"names":["questions","questionText","answerOptions","answerText","points","App","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","modalIsOpen","setModalIsOpen","fadeout","setFadeout","className","onClick","setTimeout","src","logo","alt","length","Audio","click","play","map","answerOption","index","nextQuestion","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAaA,EAAY,CACvB,CACEC,aAAc,0BACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,oCAAkCC,OAAQ,KAG5D,CACEH,aAAc,gCACdC,cAAe,CACb,CAAEC,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,cAAeC,OAAQ,GACrC,CAAED,WAAY,oCAAkCC,OAAQ,GACxD,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,yBACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,qCAAmCC,OAAQ,GACzD,CAAED,WAAY,uBAAwBC,OAAQ,MC9BrC,MAA0B,iCCA1B,MAA0B,kCCK1B,SAASC,IAAO,IAAD,EACkBC,mBAAS,GAD3B,mBACrBC,EADqB,KACJC,EADI,OAEMF,oBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,OAGFJ,mBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,OAIUN,oBAAS,GAJnB,mBAIrBO,EAJqB,KAIRC,EAJQ,OAKER,oBAAS,GALX,mBAKrBS,EALqB,KAKZC,EALY,KAmC5B,OACE,oCACGH,GACC,yBAAKI,UAAWF,EAAU,cAAgB,SACxC,yBAAKE,UAAU,iBACb,oCACA,2DACA,8FACA,iDACA,4BAAQA,UAAU,eAAeC,QAAS,kBAhBlDF,GAAW,QACXG,YAAW,WACTL,GAAe,KACd,OAaK,mBAGA,yBAAKG,UAAU,SACb,yBAAKG,IAAKC,EAAMC,IAAI,YAK5B,oCACA,2DAEA,yBAAKL,UAAU,iBACb,yBAAKA,UAAU,OACZR,GACC,oCACE,yBAAKQ,UAAU,iBAAf,0BACsB,6BADtB,IAC8BN,EAD9B,OAC4D,EAAnBX,EAAUuB,OADnD,KACgE,6BAC9D,6BACCZ,EAAQ,GAAK,qCAAuC,GACpDA,GAAS,GAAKA,GAAS,GAAK,qCAAuC,GACnEA,EAAQ,EAAI,sCAAwC,IAEvD,4BAAQM,UAAU,eAAeC,QAAS,kBA9CpD,IAAIM,MAAMC,GAAOC,OACjBlB,EAAmB,GACnBI,EAAS,QACTF,GAAa,KA2CH,gBAKFD,GACA,oCACE,yBAAKQ,UAAU,oBACb,yBAAKA,UAAU,kBACb,yCAAeV,EAAkB,GADnC,IAC8CP,EAAUuB,QAExD,yBAAKN,UAAU,iBACZjB,EAAUO,GAAiBN,eAGhC,yBAAKgB,UAAU,kBACZjB,EAAUO,GAAiBL,cAAcyB,KAAI,SAACC,EAAcC,GAAf,OAC5C,4BACEZ,UAAU,gBACVC,QAAS,kBA/E3B,SAAiCd,GAC/B,IAAIoB,MAAMC,GAAOC,OACbtB,GACFQ,EAASD,EAAQP,GAEnB,IAAM0B,EAAevB,EAAkB,EACnCuB,EAAe9B,EAAUuB,OAC3Bf,EAAmBsB,GAEnBpB,GAAa,GAsEgBqB,CAAwBH,EAAaxB,UAEnDwB,EAAazB,iBAMxB,yBAAKc,UAAU,SACb,yBAAKG,IAAKC,EAAMC,IAAI,YAI1B,2ECnGNU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC7B,EAAD,OAEF8B,SAASC,eAAe,W","file":"static/js/main.2b357994.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    questionText: 'Il bicchiere lo vedi...',\r\n    answerOptions: [\r\n      { answerText: 'Mezzo pieno.', points: 5 },\r\n      { answerText: 'Mezzo vuoto.', points: 3 },\r\n      { answerText: 'Chi si è fregato il bicchiere?', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Come usciremo dalla pandemia?',\r\n    answerOptions: [\r\n      { answerText: 'Migliori.', points: 5 },\r\n      { answerText: 'Peggiori.', points: 3 },\r\n      { answerText: 'Moriremo tutti!', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Ti fidi dei vaccini?',\r\n    answerOptions: [\r\n      { answerText: 'Pienamente.', points: 5 },\r\n      { answerText: \"Beh, se non c'è alternativa...\", points: 3 },\r\n      { answerText: 'Moriremo tutti!', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Ti fidi delle persone?',\r\n    answerOptions: [\r\n      { answerText: 'Direi di si.', points: 5 },\r\n      { answerText: \"La fregatura è dietro l'angolo.\", points: 3 },\r\n      { answerText: 'Devono morire tutti!', points: 1 }\r\n    ]\r\n  }\r\n];\r\n","export default __webpack_public_path__ + \"static/media/logo.32341714.png\";","export default __webpack_public_path__ + \"static/media/click.a8760bf5.mp3\";","import React, { useState } from 'react';\nimport { questions } from './data/data';\nimport logo from './assets/images/logo.png';\nimport click from './assets/sounds/click.mp3';\n\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n  const [fadeout, setFadeout] = useState(false);\n\n  function handleAnswerButtonClick(points) {\n    new Audio(click).play();\n    if (points) {\n      setScore(score + points);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  function handleReset() {\n    new Audio(click).play();\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  }\n\n  function closeModal() {\n    setFadeout(true);\n    setTimeout(() => {\n      setModalIsOpen(false);\n    }, 500);\n  }\n\n  //RENDERING JSX DELL'APP//\n  return (\n    <>\n      {modalIsOpen && (\n        <div className={fadeout ? 'modal close' : 'modal'}>\n          <div className=\"modal-content\">\n            <h1>TEST</h1>\n            <h2>Sei pessimista o ottimista?</h2>\n            <p>Rispondi a tutte le domande e alla fine scoprirai il risultato.</p>\n            <p>Buon divertimento!</p>\n            <button className=\"button-modal\" onClick={() => closeModal()}>\n              Inizia il test!\n            </button>\n            <div className=\"image\">\n              <img src={logo} alt=\"logo\" />\n            </div>\n          </div>\n        </div>\n      )}\n      <h1>TEST</h1>\n      <h2>Sei pessimista o ottimista?</h2>\n\n      <div className=\"app-container\">\n        <div className=\"app\">\n          {showScore && (\n            <>\n              <div className=\"score-section\">\n                Il tuo punteggio è: <br /> {score} su {questions.length * 5}. <br />\n                <br />\n                {score > 16 ? 'Congratulazioni! Sei un ottimista!' : ''}\n                {score >= 6 && score <= 16 ? 'Beh dai! Sei una persona realista!' : ''}\n                {score < 6 ? 'Lasciamo stare...meglio non sapere!' : ''}\n              </div>\n              <button className=\"button-reset\" onClick={() => handleReset()}>\n                Ricomincia\n              </button>\n            </>\n          )}\n          {!showScore && (\n            <>\n              <div className=\"question-section\">\n                <div className=\"question-count\">\n                  <span>Domanda {currentQuestion + 1}</span>/{questions.length}\n                </div>\n                <div className=\"question-text\">\n                  {questions[currentQuestion].questionText}\n                </div>\n              </div>\n              <div className=\"answer-section\">\n                {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n                  <button\n                    className=\"button-answer\"\n                    onClick={() => handleAnswerButtonClick(answerOption.points)}\n                  >\n                    {answerOption.answerText}\n                  </button>\n                ))}\n              </div>\n            </>\n          )}\n          <div className=\"image\">\n            <img src={logo} alt=\"logo\" />\n          </div>\n        </div>\n      </div>\n      <footer>Made with ❤️ by Andrea Bruno</footer>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}