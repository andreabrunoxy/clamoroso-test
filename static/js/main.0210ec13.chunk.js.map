{"version":3,"sources":["data/data.js","assets/images/logo.png","assets/sounds/click.mp3","App.js","index.js"],"names":["questions","questionText","answerOptions","answerText","points","App","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","modalIsOpen","setModalIsOpen","useEffect","className","onClick","src","logo","alt","length","Audio","click","play","map","answerOption","index","nextQuestion","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAAaA,EAAY,CACvB,CACEC,aAAc,0BACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,oCAAkCC,OAAQ,KAG5D,CACEH,aAAc,gCACdC,cAAe,CACb,CAAEC,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,cAAeC,OAAQ,GACrC,CAAED,WAAY,oCAAkCC,OAAQ,GACxD,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,yBACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,qCAAmCC,OAAQ,GACzD,CAAED,WAAY,uBAAwBC,OAAQ,MC9BrC,MAA0B,iCCA1B,MAA0B,kCCK1B,SAASC,IAAO,IAAD,EACkBC,mBAAS,GAD3B,mBACrBC,EADqB,KACJC,EADI,OAEMF,oBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,OAGFJ,mBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,OAIUN,oBAAS,GAJnB,mBAIrBO,EAJqB,KAIRC,EAJQ,KA+B5B,OAzBAC,qBAAU,WACRD,GAAe,KACd,IAwBD,oCACGD,GACC,yBAAKG,UAAU,SACb,yBAAKA,UAAU,iBACb,oCACA,2DACA,8FACA,iDACA,4BAAQA,UAAU,eAAeC,QAAS,kBAAMH,GAAe,KAA/D,mBAGA,yBAAKE,UAAU,SACb,yBAAKE,IAAKC,EAAMC,IAAI,YAK5B,oCACA,2DAEA,yBAAKJ,UAAU,iBACb,yBAAKA,UAAU,OACZP,GACC,oCACE,yBAAKO,UAAU,iBAAf,0BACsB,6BADtB,IAC8BL,EAD9B,OAC4D,EAAnBX,EAAUqB,OADnD,KACgE,6BAC9D,6BACCV,EAAQ,GAAK,qCAAuC,GACpDA,GAAS,GAAKA,GAAS,GAAK,qCAAuC,GACnEA,EAAQ,EAAI,sCAAwC,IAEvD,4BAAQK,UAAU,eAAeC,QAAS,kBAvCpD,IAAIK,MAAMC,GAAOC,OACjBhB,EAAmB,GACnBI,EAAS,QACTF,GAAa,KAoCH,gBAKFD,GACA,oCACE,yBAAKO,UAAU,oBACb,yBAAKA,UAAU,kBACb,yCAAeT,EAAkB,GADnC,IAC8CP,EAAUqB,QAExD,yBAAKL,UAAU,iBACZhB,EAAUO,GAAiBN,eAGhC,yBAAKe,UAAU,kBACZhB,EAAUO,GAAiBL,cAAcuB,KAAI,SAACC,EAAcC,GAAf,OAC5C,4BACEX,UAAU,gBACVC,QAAS,kBAxE3B,SAAiCb,GAC/B,IAAIkB,MAAMC,GAAOC,OACbpB,GACFQ,EAASD,EAAQP,GAEnB,IAAMwB,EAAerB,EAAkB,EACnCqB,EAAe5B,EAAUqB,OAC3Bb,EAAmBoB,GAEnBlB,GAAa,GA+DgBmB,CAAwBH,EAAatB,UAEnDsB,EAAavB,iBAMxB,yBAAKa,UAAU,SACb,yBAAKE,IAAKC,EAAMC,IAAI,YAI1B,2EC/FNU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC3B,EAAD,OAEF4B,SAASC,eAAe,W","file":"static/js/main.0210ec13.chunk.js","sourcesContent":["export const questions = [\r\n  {\r\n    questionText: 'Il bicchiere lo vedi...',\r\n    answerOptions: [\r\n      { answerText: 'Mezzo pieno.', points: 5 },\r\n      { answerText: 'Mezzo vuoto.', points: 3 },\r\n      { answerText: 'Chi si è fregato il bicchiere?', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Come usciremo dalla pandemia?',\r\n    answerOptions: [\r\n      { answerText: 'Migliori.', points: 5 },\r\n      { answerText: 'Peggiori.', points: 3 },\r\n      { answerText: 'Moriremo tutti!', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Ti fidi dei vaccini?',\r\n    answerOptions: [\r\n      { answerText: 'Pienamente.', points: 5 },\r\n      { answerText: \"Beh, se non c'è alternativa...\", points: 3 },\r\n      { answerText: 'Moriremo tutti!', points: 1 }\r\n    ]\r\n  },\r\n  {\r\n    questionText: 'Ti fidi delle persone?',\r\n    answerOptions: [\r\n      { answerText: 'Direi di si.', points: 5 },\r\n      { answerText: \"La fregatura è dietro l'angolo.\", points: 3 },\r\n      { answerText: 'Devono morire tutti!', points: 1 }\r\n    ]\r\n  }\r\n];\r\n","export default __webpack_public_path__ + \"static/media/logo.32341714.png\";","export default __webpack_public_path__ + \"static/media/click.a8760bf5.mp3\";","import React, { useState, useEffect } from 'react';\nimport { questions } from './data/data';\nimport logo from './assets/images/logo.png';\nimport click from './assets/sounds/click.mp3';\n\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n  const [modalIsOpen, setModalIsOpen] = useState(true);\n\n  useEffect(() => {\n    setModalIsOpen(true);\n  }, []);\n\n  function handleAnswerButtonClick(points) {\n    new Audio(click).play();\n    if (points) {\n      setScore(score + points);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  function handleReset() {\n    new Audio(click).play();\n    setCurrentQuestion(0);\n    setScore(0);\n    setShowScore(false);\n  }\n\n  //RENDERING JSX DELL'APP//\n  return (\n    <>\n      {modalIsOpen && (\n        <div className=\"modal\">\n          <div className=\"modal-content\">\n            <h1>TEST</h1>\n            <h2>Sei pessimista o ottimista?</h2>\n            <p>Rispondi a tutte le domande e alla fine scoprirai il risultato.</p>\n            <p>Buon divertimento!</p>\n            <button className=\"button-modal\" onClick={() => setModalIsOpen(false)}>\n              Inizia il test!\n            </button>\n            <div className=\"image\">\n              <img src={logo} alt=\"logo\" />\n            </div>\n          </div>\n        </div>\n      )}\n      <h1>TEST</h1>\n      <h2>Sei pessimista o ottimista?</h2>\n\n      <div className=\"app-container\">\n        <div className=\"app\">\n          {showScore && (\n            <>\n              <div className=\"score-section\">\n                Il tuo punteggio è: <br /> {score} su {questions.length * 5}. <br />\n                <br />\n                {score > 16 ? 'Congratulazioni! Sei un ottimista!' : ''}\n                {score >= 6 && score <= 16 ? 'Beh dai! Sei una persona realista!' : ''}\n                {score < 6 ? 'Lasciamo stare...meglio non sapere!' : ''}\n              </div>\n              <button className=\"button-reset\" onClick={() => handleReset()}>\n                Ricomincia\n              </button>\n            </>\n          )}\n          {!showScore && (\n            <>\n              <div className=\"question-section\">\n                <div className=\"question-count\">\n                  <span>Domanda {currentQuestion + 1}</span>/{questions.length}\n                </div>\n                <div className=\"question-text\">\n                  {questions[currentQuestion].questionText}\n                </div>\n              </div>\n              <div className=\"answer-section\">\n                {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n                  <button\n                    className=\"button-answer\"\n                    onClick={() => handleAnswerButtonClick(answerOption.points)}\n                  >\n                    {answerOption.answerText}\n                  </button>\n                ))}\n              </div>\n            </>\n          )}\n          <div className=\"image\">\n            <img src={logo} alt=\"logo\" />\n          </div>\n        </div>\n      </div>\n      <footer>Made with ❤️ by Andrea Bruno</footer>\n    </>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}