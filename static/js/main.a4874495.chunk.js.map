{"version":3,"sources":["App.js","index.js"],"names":["App","useState","currentQuestion","setCurrentQuestion","showScore","setShowScore","score","setScore","questions","questionText","answerOptions","answerText","points","className","length","map","answerOption","index","onClick","nextQuestion","handleAnswerButtonClick","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uMAEe,SAASA,IAAO,IAAD,EACkBC,mBAAS,GAD3B,mBACrBC,EADqB,KACJC,EADI,OAEMF,oBAAS,GAFf,mBAErBG,EAFqB,KAEVC,EAFU,OAGFJ,mBAAS,GAHP,mBAGrBK,EAHqB,KAGdC,EAHc,KAKtBC,EAAY,CAChB,CACEC,aAAc,0BACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,oCAAkCC,OAAQ,KAG5D,CACEH,aAAc,gCACdC,cAAe,CACb,CAAEC,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,YAAaC,OAAQ,GACnC,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,uBACdC,cAAe,CACb,CAAEC,WAAY,cAAeC,OAAQ,GACrC,CAAED,WAAY,oCAAkCC,OAAQ,GACxD,CAAED,WAAY,kBAAmBC,OAAQ,KAG7C,CACEH,aAAc,yBACdC,cAAe,CACb,CAAEC,WAAY,eAAgBC,OAAQ,GACtC,CAAED,WAAY,qCAAmCC,OAAQ,GACzD,CAAED,WAAY,uBAAwBC,OAAQ,MAiBpD,OAAIR,GAAaE,EAAQ,GAErB,oCACE,8CACA,2DACA,yBAAKO,UAAU,OACb,yBAAKA,UAAU,iBAAf,6BACyB,6BADzB,IACiCP,EADjC,OAC+D,EAAnBE,EAAUM,OADtD,KACmE,6BACjE,6BAFF,mBAIE,6BAJF,wBASGV,GAAaE,EAAQ,GAAKA,EAAQ,GAEzC,oCACE,8CACA,2DACA,yBAAKO,UAAU,OACb,yBAAKA,UAAU,iBAAf,6BACyB,6BACtBP,EAFH,OAEiC,EAAnBE,EAAUM,OAFxB,KAEqC,6BACnC,6BAHF,YAIW,6BAJX,kCASGV,GAAaE,EAAQ,EAE5B,oCACE,8CACA,2DACA,yBAAKO,UAAU,OACb,yBAAKA,UAAU,iBAAf,6BACyB,6BADzB,IACiCP,EADjC,OAC+D,EAAnBE,EAAUM,OADtD,KACmE,6BACjE,6BAFF,gDAUJ,oCACE,8CACA,2DACA,yBAAKD,UAAU,OACb,yBAAKA,UAAU,oBACb,yBAAKA,UAAU,kBACb,yCAAeX,EAAkB,GADnC,IAC8CM,EAAUM,QAExD,yBAAKD,UAAU,iBAAiBL,EAAUN,GAAiBO,eAE7D,yBAAKI,UAAU,kBACZL,EAAUN,GAAiBQ,cAAcK,KAAI,SAACC,EAAcC,GAAf,OAC5C,4BAAQC,QAAS,kBAtE7B,SAAiCN,GAC3BA,GACFL,EAASD,EAAQM,GAEnB,IAAMO,EAAejB,EAAkB,EACnCiB,EAAeX,EAAUM,OAC3BX,EAAmBgB,GAEnBd,GAAa,GA8DkBe,CAAwBJ,EAAaJ,UAAUI,EAAaL,kBC3GjGU,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAACvB,EAAD,OAEFwB,SAASC,eAAe,W","file":"static/js/main.a4874495.chunk.js","sourcesContent":["import React, { useState } from \"react\";\n\nexport default function App() {\n  const [currentQuestion, setCurrentQuestion] = useState(0);\n  const [showScore, setShowScore] = useState(false);\n  const [score, setScore] = useState(0);\n\n  const questions = [\n    {\n      questionText: \"Il bicchiere lo vedi...\",\n      answerOptions: [\n        { answerText: \"Mezzo pieno.\", points: 5 },\n        { answerText: \"Mezzo vuoto.\", points: 3 },\n        { answerText: \"Chi si è fregato il bicchiere?\", points: 1 }\n      ]\n    },\n    {\n      questionText: \"Come usciremo dalla pandemia?\",\n      answerOptions: [\n        { answerText: \"Migliori.\", points: 5 },\n        { answerText: \"Peggiori.\", points: 3 },\n        { answerText: \"Moriremo tutti!\", points: 1 }\n      ]\n    },\n    {\n      questionText: \"Ti fidi dei vaccini?\",\n      answerOptions: [\n        { answerText: \"Pienamente.\", points: 5 },\n        { answerText: \"Beh, se non c'è alternativa...\", points: 3 },\n        { answerText: \"Moriremo tutti!\", points: 1 }\n      ]\n    },\n    {\n      questionText: \"Ti fidi delle persone?\",\n      answerOptions: [\n        { answerText: \"Direi di si.\", points: 5 },\n        { answerText: \"La fregatura è dietro l'angolo.\", points: 3 },\n        { answerText: \"Devono morire tutti!\", points: 1 }\n      ]\n    }\n  ];\n\n  function handleAnswerButtonClick(points) {\n    if (points) {\n      setScore(score + points);\n    }\n    const nextQuestion = currentQuestion + 1;\n    if (nextQuestion < questions.length) {\n      setCurrentQuestion(nextQuestion);\n    } else {\n      setShowScore(true);\n    }\n  }\n\n  if (showScore && score > 16) {\n    return (\n      <>\n        <h1>Clamoroso Test</h1>\n        <h2>Sei ottimista o pessimista?</h2>\n        <div className=\"app\">\n          <div className=\"score-section\">\n            Il tuo punteggio è di: <br /> {score} su {questions.length * 5}. <br />\n            <br />\n            Congratulazioni!\n            <br /> Sei un ottimista!\n          </div>\n        </div>\n      </>\n    );\n  } else if (showScore && score > 6 && score < 16) {\n    return (\n      <>\n        <h1>Clamoroso Test</h1>\n        <h2>Sei ottimista o pessimista?</h2>\n        <div className=\"app\">\n          <div className=\"score-section\">\n            Il tuo punteggio è di: <br />\n            {score} su {questions.length * 5}. <br />\n            <br />\n            Beh dai! <br /> Sei una persona realista...\n          </div>\n        </div>\n      </>\n    );\n  } else if (showScore && score < 6) {\n    return (\n      <>\n        <h1>Clamoroso Test</h1>\n        <h2>Sei ottimista o pessimista?</h2>\n        <div className=\"app\">\n          <div className=\"score-section\">\n            Il tuo punteggio è di: <br /> {score} su {questions.length * 5}. <br />\n            <br />\n            Sei sicuro di voler sapere il tuo profilo?\n          </div>\n        </div>\n      </>\n    );\n  } else {\n    return (\n      <>\n        <h1>Clamoroso Test</h1>\n        <h2>Sei ottimista o pessimista?</h2>\n        <div className=\"app\">\n          <div className=\"question-section\">\n            <div className=\"question-count\">\n              <span>Domanda {currentQuestion + 1}</span>/{questions.length}\n            </div>\n            <div className=\"question-text\">{questions[currentQuestion].questionText}</div>\n          </div>\n          <div className=\"answer-section\">\n            {questions[currentQuestion].answerOptions.map((answerOption, index) => (\n              <button onClick={() => handleAnswerButtonClick(answerOption.points)}>{answerOption.answerText}</button>\n            ))}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}